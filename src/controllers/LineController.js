const { client } = require('../services/lineService');

class LineController {
  async handleWebhook(events) {
    try {
      await Promise.all(events.map(event => this.handleEvent(event)));
    } catch (err) {
      console.error('LINE webhook error:', err);
    }
  }

  async handleEvent(event) {
    if (event.type !== 'message' || event.message.type !== 'text') return;
    const userMessage = event.message.text;
    const replyToken = event.replyToken;

    if (userMessage === 'package') {
      await this.replyPackage(replyToken);
    } else if (userMessage === 'help') {
      await this.replyHelp(replyToken);
    }

  }

  async replyPackage(replyToken) {
    const message = {
      type: 'flex',
      altText: '‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢',
      contents: {
        type: 'carousel',
        contents: [
          // ‡∏ó‡∏î‡∏•‡∏≠‡∏á 1 ‡∏ß‡∏±‡∏ô
          {
            type: 'bubble',
            size: 'kilo',
            body: {
              type: 'box',
              layout: 'vertical',
              spacing: 'md',
              contents: [
                {
                  type: 'text',
                  text: '‡∏ó‡∏î‡∏•‡∏≠‡∏á 1 ‡∏ß‡∏±‡∏ô',
                  weight: 'bold',
                  size: 'xl',
                  color: '#0066FF'
                },
                {
                  type: 'text',
                  text: '‡∏ü‡∏£‡∏µ',
                  size: 'md',
                  weight: 'bold',
                  color: '#00B900'
                },
                {
                  type: 'text',
                  text: '‡∏î‡∏ß‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô 1 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n(‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å)',
                  size: 'sm',
                  wrap: true,
                  margin: 'md'
                }
              ]
            },
            footer: {
              type: 'box',
              layout: 'vertical',
              contents: [
                {
                  type: 'button',
                  style: 'primary',
                  color: '#00B900',
                  action: {
                    type: 'uri',
                    label: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏£‡∏µ',
                    uri: 'https://yourdomain.com/subscribe/trial'
                  }
                }
              ]
            }
          },
          // Basic
          {
            type: 'bubble',
            size: 'kilo',
            body: {
              type: 'box',
              layout: 'vertical',
              spacing: 'md',
              contents: [
                {
                  type: 'text',
                  text: 'Basic',
                  weight: 'bold',
                  size: 'xl',
                  color: '#FF6600'
                },
                {
                  type: 'text',
                  text: '‡∏ø99 / ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
                  size: 'md',
                  weight: 'bold'
                },
                {
                  type: 'text',
                  text: '‡∏î‡∏ß‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô 3 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n(‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å, ‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô, ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô)',
                  size: 'sm',
                  wrap: true,
                  margin: 'md'
                }
              ]
            },
            footer: {
              type: 'box',
              layout: 'vertical',
              contents: [
                {
                  type: 'button',
                  style: 'primary',
                  color: '#FF6600',
                  action: {
                    type: 'uri',
                    label: '‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Basic',
                    uri: 'https://yourdomain.com/subscribe/basic'
                  }
                }
              ]
            }
          },
          // Premium
          {
            type: 'bubble',
            size: 'kilo',
            body: {
              type: 'box',
              layout: 'vertical',
              spacing: 'md',
              contents: [
                {
                  type: 'text',
                  text: 'Premium',
                  weight: 'bold',
                  size: 'xl',
                  color: '#9933CC'
                },
                {
                  type: 'text',
                  text: '‡∏ø199 / ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
                  size: 'md',
                  weight: 'bold'
                },
                {
                  type: 'text',
                  text: '‡∏î‡∏ß‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô + ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏î‡∏ß‡∏á\n+ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
                  size: 'sm',
                  wrap: true,
                  margin: 'md'
                }
              ]
            },
            footer: {
              type: 'box',
              layout: 'vertical',
              contents: [
                {
                  type: 'button',
                  style: 'primary',
                  color: '#9933CC',
                  action: {
                    type: 'uri',
                    label: '‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Premium',
                    uri: 'https://yourdomain.com/subscribe/premium'
                  }
                }
              ]
            }
          }
        ]
      }
    };

    try {
      await client.replyMessage(replyToken, message);
    } catch (err) {
      console.error('Reply package error:', err);
    }
  }


  async replyHelp(replyToken) {
    const message = {
      type: "text",
      text: "‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤‡∏ó‡∏µ‡πà:\n\nüìû ‡πÇ‡∏ó‡∏£: 123-456-7890\n‚úâÔ∏è ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: support@example.com"
    };

    try {
      await client.replyMessage(replyToken, message);
    } catch (err) {
      console.error('Reply error:', err);
    }
  }
}

module.exports = new LineController();
